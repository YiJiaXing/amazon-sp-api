/*
 * Selling Partner API for Retail Procurement Transaction Status
 * The Selling Partner API for Retail Procurement Transaction Status provides programmatic access to status information on specific asynchronous POST transactions for vendors.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.vendorTransactionStatus;

import com.amazon.xingapi.client.ApiException;
import com.amazon.xingapi.api.vendorTransactionStatus.VendorTransactionApi;
import com.amazon.xingapi.model.vendorTransactionStatus.GetTransactionResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VendorTransactionApi
 */
@Ignore
public class VendorTransactionApiTest {

    private final VendorTransactionApi api = new VendorTransactionApi();

    
    /**
     * 
     *
     * Returns the status of the transaction that you specify.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionTest() throws ApiException {
        String transactionId = null;
        GetTransactionResponse response = api.getTransaction(transactionId);

        // TODO: test validations
    }
    
}
