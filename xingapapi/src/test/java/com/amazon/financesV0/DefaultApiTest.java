/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.financesV0;

import com.amazon.xingapi.client.ApiException;
import com.amazon.xingapi.api.financesV0.DefaultApi;
import com.amazon.xingapi.model.financesV0.ListFinancialEventGroupsResponse;
import com.amazon.xingapi.model.financesV0.ListFinancialEventsResponse;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * Returns financial event groups for a given date range.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFinancialEventGroupsTest() throws ApiException {
        Integer maxResultsPerPage = null;
        OffsetDateTime financialEventGroupStartedBefore = null;
        OffsetDateTime financialEventGroupStartedAfter = null;
        String nextToken = null;
        ListFinancialEventGroupsResponse response = api.listFinancialEventGroups(maxResultsPerPage, financialEventGroupStartedBefore, financialEventGroupStartedAfter, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns financial events for the specified data range.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFinancialEventsTest() throws ApiException {
        Integer maxResultsPerPage = null;
        OffsetDateTime postedAfter = null;
        OffsetDateTime postedBefore = null;
        String nextToken = null;
        ListFinancialEventsResponse response = api.listFinancialEvents(maxResultsPerPage, postedAfter, postedBefore, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all financial events for the specified financial event group.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFinancialEventsByGroupIdTest() throws ApiException {
        String eventGroupId = null;
        Integer maxResultsPerPage = null;
        String nextToken = null;
        ListFinancialEventsResponse response = api.listFinancialEventsByGroupId(eventGroupId, maxResultsPerPage, nextToken);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all financial events for the specified order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.5 | 30 |  For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFinancialEventsByOrderIdTest() throws ApiException {
        String orderId = null;
        Integer maxResultsPerPage = null;
        String nextToken = null;
        ListFinancialEventsResponse response = api.listFinancialEventsByOrderId(orderId, maxResultsPerPage, nextToken);

        // TODO: test validations
    }
    
}
