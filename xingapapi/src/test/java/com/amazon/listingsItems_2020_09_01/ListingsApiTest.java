/*
 * Selling Partner API for Listings Items
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listing Items API Use Case Guide](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/use-case-guides/listings-items-api-use-case-guide/listings-items-api-use-case-guide_2020-09-01.md).
 *
 * OpenAPI spec version: 2020-09-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.listingsItems_2020_09_01;

import com.amazon.xingapi.client.ApiException;
import com.amazon.xingapi.api.listingsItems_2020_09_01.ListingsApi;
import com.amazon.xingapi.model.listingsItems_2020_09_01.ErrorList;
import com.amazon.xingapi.model.listingsItems_2020_09_01.ListingsItemPatchRequest;
import com.amazon.xingapi.model.listingsItems_2020_09_01.ListingsItemPutRequest;
import com.amazon.xingapi.model.listingsItems_2020_09_01.ListingsItemSubmissionResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ListingsApi
 */
@Ignore
public class ListingsApiTest {

    private final ListingsApi api = new ListingsApi();

    
    /**
     * 
     *
     * Delete a listings item for a selling partner.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/usage-plans-rate-limits/Usage-Plans-and-Rate-Limits.md).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteListingsItemTest() throws ApiException {
        String sellerId = null;
        String sku = null;
        List<String> marketplaceIds = null;
        String issueLocale = null;
        ListingsItemSubmissionResponse response = api.deleteListingsItem(sellerId, sku, marketplaceIds, issueLocale);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/usage-plans-rate-limits/Usage-Plans-and-Rate-Limits.md).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchListingsItemTest() throws ApiException {
        String sellerId = null;
        String sku = null;
        List<String> marketplaceIds = null;
        ListingsItemPatchRequest body = null;
        String issueLocale = null;
        ListingsItemSubmissionResponse response = api.patchListingsItem(sellerId, sku, marketplaceIds, body, issueLocale);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Creates a new or fully-updates an existing listings item for a selling partner.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 5 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/usage-plans-rate-limits/Usage-Plans-and-Rate-Limits.md).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putListingsItemTest() throws ApiException {
        String sellerId = null;
        String sku = null;
        List<String> marketplaceIds = null;
        ListingsItemPutRequest body = null;
        String issueLocale = null;
        ListingsItemSubmissionResponse response = api.putListingsItem(sellerId, sku, marketplaceIds, body, issueLocale);

        // TODO: test validations
    }
    
}
