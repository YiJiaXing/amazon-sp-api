/*
 * Selling Partner API for Shipping
 * Provides programmatic access to Amazon Shipping APIs.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.xingapi.model.shipping;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.xingapi.model.shipping.Currency;
import com.amazon.xingapi.model.shipping.ServiceType;
import com.amazon.xingapi.model.shipping.ShippingPromiseSet;
import com.amazon.xingapi.model.shipping.Weight;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The specific rate for a shipping service, or null if no service available.
 */
@ApiModel(description = "The specific rate for a shipping service, or null if no service available.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-01-26T15:44:44.868+08:00")
public class ServiceRate {
  @SerializedName("totalCharge")
  private Currency totalCharge = null;

  @SerializedName("billableWeight")
  private Weight billableWeight = null;

  @SerializedName("serviceType")
  private ServiceType serviceType = null;

  @SerializedName("promise")
  private ShippingPromiseSet promise = null;

  public ServiceRate totalCharge(Currency totalCharge) {
    this.totalCharge = totalCharge;
    return this;
  }

   /**
   * The total charge that will be billed for the rate.
   * @return totalCharge
  **/
  @ApiModelProperty(required = true, value = "The total charge that will be billed for the rate.")
  public Currency getTotalCharge() {
    return totalCharge;
  }

  public void setTotalCharge(Currency totalCharge) {
    this.totalCharge = totalCharge;
  }

  public ServiceRate billableWeight(Weight billableWeight) {
    this.billableWeight = billableWeight;
    return this;
  }

   /**
   * The weight that was used to calculate the totalCharge.
   * @return billableWeight
  **/
  @ApiModelProperty(required = true, value = "The weight that was used to calculate the totalCharge.")
  public Weight getBillableWeight() {
    return billableWeight;
  }

  public void setBillableWeight(Weight billableWeight) {
    this.billableWeight = billableWeight;
  }

  public ServiceRate serviceType(ServiceType serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @ApiModelProperty(required = true, value = "")
  public ServiceType getServiceType() {
    return serviceType;
  }

  public void setServiceType(ServiceType serviceType) {
    this.serviceType = serviceType;
  }

  public ServiceRate promise(ShippingPromiseSet promise) {
    this.promise = promise;
    return this;
  }

   /**
   * Get promise
   * @return promise
  **/
  @ApiModelProperty(required = true, value = "")
  public ShippingPromiseSet getPromise() {
    return promise;
  }

  public void setPromise(ShippingPromiseSet promise) {
    this.promise = promise;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceRate serviceRate = (ServiceRate) o;
    return Objects.equals(this.totalCharge, serviceRate.totalCharge) &&
        Objects.equals(this.billableWeight, serviceRate.billableWeight) &&
        Objects.equals(this.serviceType, serviceRate.serviceType) &&
        Objects.equals(this.promise, serviceRate.promise);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCharge, billableWeight, serviceType, promise);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceRate {\n");
    
    sb.append("    totalCharge: ").append(toIndentedString(totalCharge)).append("\n");
    sb.append("    billableWeight: ").append(toIndentedString(billableWeight)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    promise: ").append(toIndentedString(promise)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

