/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.xingapi.model.productPricingV0;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.xingapi.model.productPricingV0.MoneyType;
import com.amazon.xingapi.model.productPricingV0.OfferCustomerType;
import com.amazon.xingapi.model.productPricingV0.Points;
import com.amazon.xingapi.model.productPricingV0.QuantityDiscountType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LowestPriceType
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-01-26T15:44:24.717+08:00")
public class LowestPriceType {
  @SerializedName("condition")
  private String condition = null;

  @SerializedName("fulfillmentChannel")
  private String fulfillmentChannel = null;

  @SerializedName("offerType")
  private OfferCustomerType offerType = null;

  @SerializedName("quantityTier")
  private Integer quantityTier = null;

  @SerializedName("quantityDiscountType")
  private QuantityDiscountType quantityDiscountType = null;

  @SerializedName("LandedPrice")
  private MoneyType landedPrice = null;

  @SerializedName("ListingPrice")
  private MoneyType listingPrice = null;

  @SerializedName("Shipping")
  private MoneyType shipping = null;

  @SerializedName("Points")
  private Points points = null;

  public LowestPriceType condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club.
   * @return condition
  **/
  @ApiModelProperty(required = true, value = "Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club.")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public LowestPriceType fulfillmentChannel(String fulfillmentChannel) {
    this.fulfillmentChannel = fulfillmentChannel;
    return this;
  }

   /**
   * Indicates whether the item is fulfilled by Amazon or by the seller.
   * @return fulfillmentChannel
  **/
  @ApiModelProperty(required = true, value = "Indicates whether the item is fulfilled by Amazon or by the seller.")
  public String getFulfillmentChannel() {
    return fulfillmentChannel;
  }

  public void setFulfillmentChannel(String fulfillmentChannel) {
    this.fulfillmentChannel = fulfillmentChannel;
  }

  public LowestPriceType offerType(OfferCustomerType offerType) {
    this.offerType = offerType;
    return this;
  }

   /**
   * Indicates the type of customer that the offer is valid for.
   * @return offerType
  **/
  @ApiModelProperty(value = "Indicates the type of customer that the offer is valid for.")
  public OfferCustomerType getOfferType() {
    return offerType;
  }

  public void setOfferType(OfferCustomerType offerType) {
    this.offerType = offerType;
  }

  public LowestPriceType quantityTier(Integer quantityTier) {
    this.quantityTier = quantityTier;
    return this;
  }

   /**
   * Indicates at what quantity this price becomes active.
   * @return quantityTier
  **/
  @ApiModelProperty(value = "Indicates at what quantity this price becomes active.")
  public Integer getQuantityTier() {
    return quantityTier;
  }

  public void setQuantityTier(Integer quantityTier) {
    this.quantityTier = quantityTier;
  }

  public LowestPriceType quantityDiscountType(QuantityDiscountType quantityDiscountType) {
    this.quantityDiscountType = quantityDiscountType;
    return this;
  }

   /**
   * Indicates the type of quantity discount this price applies to.
   * @return quantityDiscountType
  **/
  @ApiModelProperty(value = "Indicates the type of quantity discount this price applies to.")
  public QuantityDiscountType getQuantityDiscountType() {
    return quantityDiscountType;
  }

  public void setQuantityDiscountType(QuantityDiscountType quantityDiscountType) {
    this.quantityDiscountType = quantityDiscountType;
  }

  public LowestPriceType landedPrice(MoneyType landedPrice) {
    this.landedPrice = landedPrice;
    return this;
  }

   /**
   * The value calculated by adding ListingPrice + Shipping - Points.
   * @return landedPrice
  **/
  @ApiModelProperty(required = true, value = "The value calculated by adding ListingPrice + Shipping - Points.")
  public MoneyType getLandedPrice() {
    return landedPrice;
  }

  public void setLandedPrice(MoneyType landedPrice) {
    this.landedPrice = landedPrice;
  }

  public LowestPriceType listingPrice(MoneyType listingPrice) {
    this.listingPrice = listingPrice;
    return this;
  }

   /**
   * The price of the item.
   * @return listingPrice
  **/
  @ApiModelProperty(required = true, value = "The price of the item.")
  public MoneyType getListingPrice() {
    return listingPrice;
  }

  public void setListingPrice(MoneyType listingPrice) {
    this.listingPrice = listingPrice;
  }

  public LowestPriceType shipping(MoneyType shipping) {
    this.shipping = shipping;
    return this;
  }

   /**
   * The shipping cost.
   * @return shipping
  **/
  @ApiModelProperty(required = true, value = "The shipping cost.")
  public MoneyType getShipping() {
    return shipping;
  }

  public void setShipping(MoneyType shipping) {
    this.shipping = shipping;
  }

  public LowestPriceType points(Points points) {
    this.points = points;
    return this;
  }

   /**
   * The number of Amazon Points offered with the purchase of an item.
   * @return points
  **/
  @ApiModelProperty(value = "The number of Amazon Points offered with the purchase of an item.")
  public Points getPoints() {
    return points;
  }

  public void setPoints(Points points) {
    this.points = points;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LowestPriceType lowestPriceType = (LowestPriceType) o;
    return Objects.equals(this.condition, lowestPriceType.condition) &&
        Objects.equals(this.fulfillmentChannel, lowestPriceType.fulfillmentChannel) &&
        Objects.equals(this.offerType, lowestPriceType.offerType) &&
        Objects.equals(this.quantityTier, lowestPriceType.quantityTier) &&
        Objects.equals(this.quantityDiscountType, lowestPriceType.quantityDiscountType) &&
        Objects.equals(this.landedPrice, lowestPriceType.landedPrice) &&
        Objects.equals(this.listingPrice, lowestPriceType.listingPrice) &&
        Objects.equals(this.shipping, lowestPriceType.shipping) &&
        Objects.equals(this.points, lowestPriceType.points);
  }

  @Override
  public int hashCode() {
    return Objects.hash(condition, fulfillmentChannel, offerType, quantityTier, quantityDiscountType, landedPrice, listingPrice, shipping, points);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LowestPriceType {\n");
    
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    fulfillmentChannel: ").append(toIndentedString(fulfillmentChannel)).append("\n");
    sb.append("    offerType: ").append(toIndentedString(offerType)).append("\n");
    sb.append("    quantityTier: ").append(toIndentedString(quantityTier)).append("\n");
    sb.append("    quantityDiscountType: ").append(toIndentedString(quantityDiscountType)).append("\n");
    sb.append("    landedPrice: ").append(toIndentedString(landedPrice)).append("\n");
    sb.append("    listingPrice: ").append(toIndentedString(listingPrice)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

